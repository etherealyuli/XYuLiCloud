<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xyuli.cloud.auth.dao.UserDao">

    <resultMap type="cn.xyuli.cloud.common.entity.User" id="UserMap">
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="openId" column="open_id" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="pwd" column="pwd" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="del" column="del" jdbcType="BOOLEAN"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select user_id,
               open_id,
               name,
               pwd,
               status,
               create_time,
               update_time,
               del
        from user
        where user_id = #{userId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
        user_id, open_id, name, pwd, status, create_time, update_time, del
        from user
        <where>
            <if test="id != null and id != ''">
                and user_id = #{userId}
            </if>
            <if test="openId != null and openId != ''">
                and open_id = #{openId}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="pwd != null and pwd != ''">
                and pwd = #{pwd}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="del != null">
                and del = #{del}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="id != null and id != ''">
                and user_id = #{userId}
            </if>
            <if test="openId != null and openId != ''">
                and open_id = #{openId}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="pwd != null and pwd != ''">
                and pwd = #{pwd}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="del != null">
                and del = #{del}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(user_id,open_id, name, pwd, status, create_time, update_time, del)
        values (#{userId},#{openId}, #{name}, #{pwd}, #{status}, #{createTime}, #{updateTime}, #{del})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(user_id,open_id, name, pwd, status, create_time, update_time, del)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{userId},#{entity.openId}, #{entity.name}, #{entity.pwd}, #{entity.status}, #{entity.createTime},
            #{entity.updateTime}, #{entity.del})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(user_id,open_id, name, pwd, status, create_time, update_time, del)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{userId},#{entity.openId}, #{entity.name}, #{entity.pwd}, #{entity.status}, #{entity.createTime},
            #{entity.updateTime}, #{entity.del})
        </foreach>
        on duplicate key update
        user_id = values(user_id)
        open_id = values(open_id),
        name = values(name),
        pwd = values(pwd),
        status = values(status),
        create_time = values(create_time),
        update_time = values(update_time),
        del = values(del)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="openId != null and openId != ''">
                open_id = #{openId},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="pwd != null and pwd != ''">
                pwd = #{pwd},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="del != null">
                del = #{del},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from user
        where user_id = #{userId}
    </delete>

</mapper>

